@charset "utf-8";
// Forms
//
// Custom Form Elements
//
// Styleguide 6.0

// Custom Checkbox
//
// .csform__checkbox - checkbox
//
// markup:
//	<div class="csform {$modifiers}">
//		<input type="checkbox" id="checkAll" name="nall"> <label for="checkAll">전체선택</label>
//	</div>
//
// Styleguide 6.1

.inbox {
	border: 1px solid $formborder;
	@include fs(height, (sm: 36px, md: 60px, lg: 36px));
	@include fs(line-height, (sm: 36px, md: 60px, lg: 36px));
	@include fs(font-size, $step);
	box-sizing: border-box;
	padding: 0 3px;
	//vertical-align: top;
	@include Noto-Regular;
	width: 50%;
	//margin: 2px 0;
	vertical-align: top;
	&.with-btn {
		width: calc(100% - 105px);
		@include mq(md) {
		}
	}
	&.full {
		width: 100%;
		margin: 0;
	}
}
input[disabled] {
	background-color: $formReadonly;
}
input[readonly] {
	background-color: $formReadonly;
}
/* ------------------------- form check box ------------------------- */
$cp-csform: 'csform';
.#{$cp-csform} {
	margin-right: 15px;
	input[type="checkbox"],
	input[type="radio"]{
		vertical-align: top;
		opacity: 0;
		width: 0;
		max-width: 0;
		height: 0;
		line-height: 0;
		font-size: 1px;
		position: absolute;
	}
	label {
		position: relative;
		display: inline-block;
		// 16px width of fake checkbox + 6px distance between fake checkbox and text
		padding-left: 22px;
		line-height: 16px;
		//@include fs(padding-left, (sm: 32px, md: 36px, lg: 32px));
		//@include fs(line-height, (sm: 16px, md: 30px, lg: 16px));
		vertical-align: top;
	}
	label::before,
	label::after {
		position: absolute;
		content: "";
		// Needed for the line-height to take effect
		display: inline-block;
		vertical-align: top;
	}
	///*Outer box of the fake checkbox*/
	label::before{
		height: 16px;
		width: 16px;
		//@include fs(width, (sm: 16px, md: 30px, lg: 16px));
		//@include fs(height, (sm: 16px, md: 30px, lg: 16px));
		border: 1px solid $formborder;
		border-radius: 0;
		left: 0;
		top: $ck-pos;
		// (24px line-height - 16px height of fake checkbox) / 2 - 1px for the border to vertically center it.
		//top: 50%;
		//transform: translateY(-50%);
	}
	///*Hide the checkmark by default*/
	input[type="checkbox"] + label::after,
	input[type="radio"] + label::after {
		content: none;
	}
	///*Unhide on the checked state*/
	input[type="checkbox"]:checked + label::after,
	input[type="radio"]:checked + label::after {
		content: "";
	}
	///*Adding focus css on the outer-box of the fake checkbox*/
	input[type="checkbox"]:focus + label::before,
	input[type="radio"]:focus + label::before{
		//outline: rgb(59, 153, 252) auto 5px;
		outline: 1px dotted;
		outline: auto -webkit-focus-ring-color;
		outline-color: rgb(238, 14, 49);
	}
	&__checkbox {
		label::after {
			height: 5px;
			width: 9px;
			//@include fs(height, (sm: 16px, md: 30px, lg: 16px));
			//@include fs(width, (sm: 10px, md: 30px, lg: 16px));
			border-left: 2px solid;
			border-bottom: 2px solid;
			border-color: #ee0e31;
			transform: rotate(-45deg);
			left: 4px;
			//top: 50%;
			top: $ck-pos-after;
		}
	}
	&__radiobox {
		label::before{
			border-radius: 12px;
		}
		label::after {
			height: 12px;
			width: 12px;
			background: #ee0e31;
			border-radius: 100%;
			left: 3px;
			top: 3px;
			//top: 50%;
			//transform: translateY(-50%);
		}
	}
	//& + .#{$cp-csform} {
	//	margin-right: 15px;
	//}
	& + .#{$cp-csform} {
		margin-right: 15px;
	}
}

// Custom Radio
//
// .csform__radiobox - rdio 박스
//
// markup:
//	<div class="csform {$modifiers}">
//		<input type="radio" id="r1" name="r1"> <label for="r1">전체선택</label>
//		<input type="radio" id="r2" name="r1"> <label for="r2">선택 해제</label>
//	</div>
//
// Styleguide 6.2



// Custom Select Box
//
// ------------------------------------------------------------------
// 1. Global ........... Ratio, mixins, fonts, global defaults
// 2. Elements ......... Theme’s global elements
// 3. Modes ............ Styles specific to Full & List modes
// ------------------------------------------------------------------
//	.cs-select - rdio 박스
//
// Deprecated: Styling for legacy wikis. We’ll drop support for these wikis on July 13, 2007.
//
// Experimental: An alternative signup button styling used in AB Test #195.
//
// :hover             - Subtle hover highlight.
// .cs-select__disabled       - A highlight indicating you’ve already given a star.
// .stars-given - Subtle hover highlight on top of stars-given styling.
// .disabled          - Dims the button to indicate it cannot be used.
//
//	markup:
//	<div class="cs-select {$modifiers}">
//		<select name="" id="">
//			<option selected>전체</option>
//			<option>제목</option>
//			<option>작성자</option>
//			<option>작성자+제목</option>
//		</select>
//	</div>
//
//	Styleguide 6.3
//

$cp-cs-select: 'cs-select';
.#{$cp-cs-select} {
	display: inline-block;
	width: 30%;
	position: relative;
	background: #fff;
	select {
		width: 100%;
        border: 1px solid $formborder;
        @include fs(height, (sm: 36px, md: 60px, lg: 36px));
        @include fs(line-height, (sm: 36px, md: 60px, lg: 36px));
        @include fs(font-size, $step);
        padding-left: 5px;
        padding-right: 29px;
		font-family: inherit;
		background: image('cs_select.png') no-repeat right center;
		border-radius: 0;
		-webkit-appearance: none;
		-moz-appearance: none;
		appearance: none;
		@include font-size(1.6);
	}
	// IE 10, 11 네이티브화살표 숨기기
	select::-ms-expand {
		display: none;
	}
	//&:before {
	//	content: "";
	//	position: absolute;
	//	top: 6px;
	//	right: 10px;
	//	width: 0;
	//	height: 0;
	//	margin-top: 0;
	//	border-left: 5px solid transparent;
	//	border-right: 5px solid transparent;
	//	border-top: 5px solid $clight;
	//}
	&__disabled {
		select {
			border: 1px solid #D6D6D6;
			color: #D6D6D6;
		}
	}
    &.full {
        width: 100%;
    }
}
// styleguide:ignore:start
// styleguide:ignore:end


// Input Box
//
// .inbox - input 박스
//
// markup:
//  <input type="text" class="inbox" placeholder="검색어를 입력해 주세요">
//
// Styleguide 6.2



/* ------------------------- Search Box ------------------------- */
.box {
	* { vertical-align: middle; }
	&.box--search {
		border: 1px solid $tbl-bd-line;
		background: $tbl-bg-th;
		padding: 23px 29px;
		overflow: hidden;
		.s-box {
			border: 1px solid #cdcdcd;
			display: inline-block;
			background: #fff;
			width: 406px;
			.inbox {
				border: 0;
				height: 52px;
				//width: 350px;
				padding-right: 0;
				width: calc(100% - 55px);
			}
			button {
				border-left: 1px solid #cdcdcd;
				line-height: 54px;
				height: 52px;
				background: #fff;
				padding: 0 10px;
				cursor: pointer;
				&:before {
					content: '';
					display: inline-block;
					width: 30px;
					height: 30px;
					background: image('icon_set.png') no-repeat -224px 0;
					margin-top: 10px;
				}
			}
			&.only {
				width: 80%;
			}
			&.faq {
				.inbox {
					width: 302px;
				}
			}
			&.lm {
				margin-left: 20px;
			}
			&.wide {
				width: 530px;
			}
		}
		.cs-select select {
			padding: 14px 29px 14px 20px;
			background: image('cs_select.png') no-repeat right 0;
		}
		.csform label {
			margin: 18px 0;
		}
	}
	&.no-line {
		background: $tbl-bg-th;
		padding: 23px 29px;
		overflow: hidden;
		margin: 0;
		text-align: center;
	}
}
/* ------------------------- custorm input file ------------------------- */
// <div class="input-file-container">
//      <input class="input-file" id="my-file" type="file">
//      <label tabindex="0" for="my-file" class="input-file-trigger">첨부파일</label>
// </div>
// <p class="file-return"></p>
// https://tympanus.net/Tutorials/CustomFileInputs/
//	<div class="box">
//		<input type="file" name="file-7[]" id="file-7" class="inputfile inputfile-6" data-multiple-caption="{count} files selected" multiple="">
//		<label for="file-7"><span></span> <strong>Choose a file…</strong></label>
//	</div>
.inputfile {
	width: 0.1px;
	height: 0.1px;
	opacity: 0;
	overflow: hidden;
	position: absolute;
	z-index: -1;
}
.inputfile + label {
	max-width: 100%;
    @include fs(height, (sm: 36px, md: 60px, lg: 36px));
	/* 20px */
	font-weight: 700;
	text-overflow: ellipsis;
	white-space: nowrap;
	cursor: pointer;
	display: inline-block;
	overflow: hidden;
	/* 10px 20px */
	color: #fff;
	border: 1px solid $formborder;
	background-color: #fff;
	padding: 0;
}
.inputfile:focus + label,
.inputfile.has-focus + label {
	outline: 1px dotted #000;
	outline: -webkit-focus-ring-color auto 5px;
}
.inputfile + label * {
	/* pointer-events: none; */
	/* in case of FastClick lib use */
}
.inputfile + label {
}
.inputfile + label {
}
.inputfile:focus + label,
.inputfile.has-focus + label,
.inputfile + label:hover {
	border-color: $formborder;
}

.inputfile + label span,
.inputfile + label strong {
	padding: 0 1.25rem;
	/* 10px 20px */
}

.inputfile + label span {
	width: 110px;
	//min-height: 2em;
	display: inline-block;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	vertical-align: top;
    @include mq(md) {
        width: 300px;
    }
}

.inputfile + label strong {
	height: 100%;
	color: #fff;
	background-color: $border-dark;
	display: inline-block;
    @include fs(font-size, $step);
    @include fs(line-height, (sm: 36px, md: 60px, lg: 36px));
}

.inputfile:focus + label strong,
.inputfile.has-focus + label strong,
.inputfile + label:hover strong {
	background-color: $border-dark;
}

@media screen and (max-width: 50em) {
	.inputfile + label strong {
		//display: block;
	}
}


/* ------------------------- custrom checkbox BOX ------------------------- */
.checkbox {
	position: relative;
	label {
		position: absolute;
		display: block;
		width: 20px;
		height: 20px;
		//border-radius: 50%;
		cursor: pointer;
		//box-shadow: 0 1px 2px rgba(0,0,0,.5);
		z-index: 10;
	}
	label:after {
		position: absolute;
		width: 10px;
		height: 10px;
		top: 5px;
		left: 5px;
		//border-radius: 50%;
		background: #cc3300;
		content: '';
		//box-shadow: inset 0 1px 1px rgba(0,0,0,0.5),
		//0 1px 2px rgba(255,255,255,.2);
	}
	input[type=checkbox] {visibility: hidden;}
	// Checkbox Five
	&.box {
		@include fs(height, (sm: 36px, md: 60px, lg: 36px));
		@include fs(width, (sm: 36px, md: 60px, lg: 36px));
		//border-radius: 3px;
		background: #fff;
		display: inline-block;
		label {
			top: 0;
			left: 0;
			@include fs(height, (sm: 36px, md: 60px, lg: 36px));
			@include fs(width, (sm: 36px, md: 60px, lg: 36px));
			@include fs(line-height, (sm: 36px, md: 60px, lg: 36px));
			@include fs(font-size, $step);
			letter-spacing: 1px;
			text-align: center;
			text-transform: uppercase;
			font-weight: bold;
			border: 1px solid $formborder;
			//border-radius: 3px;
			box-shadow: none;
			box-sizing: border-box;
			&:after {
				background: none;
				box-shadow: none;
			}
		}
		input[type=radio] {
			+ label {
				background: #f5f5f5;
				//box-shadow: inset 0 1px 1px rgba(0,0,0,0.2);
			}
			&:checked {
				+ label {
					background: #cc3300;
					color: #fff;
					//box-shadow: 0 1px 1px rgba(0,0,0,0.2);
				}
			}
		}
	}
}